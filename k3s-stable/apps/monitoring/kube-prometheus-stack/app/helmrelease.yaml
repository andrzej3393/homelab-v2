apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: monitoring
spec:
  interval: 30m
  timeout: 15m
  chart:
    spec:
      chart: kube-prometheus-stack
      version: "62.3.1"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    crds: Create
    remediation:
      retries: 5
  upgrade:
    crds: CreateReplace
    remediation:
      retries: 5
  values:
    alertmanager:
      config:
        global:
          resolve_timeout: 5m
        receivers:
          - name: "null"
          - name: "robusta"
            webhook_configs:
              - url: "http://robusta-runner.monitoring.svc.cluster.local/api/alerts"
                send_resolved: true
        route:
          group_by: ["..."]
          group_wait: 1s
          group_interval: 1s
          repeat_interval: 4h
          receiver: "robusta"
          routes:
            - matchers:
                - alertname =~ "Watchdog"
              receiver: "null"
      ingress:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "alertmanager.${HOMELAB_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Alertmanager"
          gethomepage.dev/group: "Monitoring"
          gethomepage.dev/icon: "alertmanager"
          gethomepage.dev/pod-selector: >-
            app.kubernetes.io/name=alertmanager
        hosts:
          - "alertmanager.${HOMELAB_DOMAIN}"
        paths:
          - /
    grafana:
      adminPassword: "${GRAFANA_PASSWORD}"
      adminUser: "${GRAFANA_USER}"
      ingress:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "grafana.${HOMELAB_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Grafana"
          gethomepage.dev/group: "Monitoring"
          gethomepage.dev/icon: "grafana"
          gethomepage.dev/pod-selector: >-
            app.kubernetes.io/name=grafana
          gethomepage.dev/widget.type: "grafana"
          gethomepage.dev/widget.url: "https://grafana.${HOMELAB_DOMAIN}"
          gethomepage.dev/widget.username: "${GRAFANA_USER}"
          gethomepage.dev/widget.password: "${GRAFANA_PASSWORD}"
        hosts:
          - "grafana.${HOMELAB_DOMAIN}"
        path: /
    prometheus:
      prometheusSpec:
        externalUrl: "https://prometheus.${HOMELAB_DOMAIN}"
        podMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        scrapeConfigSelectorNilUsesHelmValues: false
        scrapeConfigSelector: {}
        scrapeConfigNamespaceSelector: {}
        retention: 7d
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: nfs-ssd
              accessModes:
                - ReadWriteOnce
              resources:
                requests:
                  storage: 10Gi
        additionalScrapeConfigs:
          - job_name: "healthchecks"
            metrics_path: "/projects/${HC_PROJECT_ID}/metrics/${HC_TOKEN_RO}"
            scheme: "https"
            static_configs:
              - targets:
                  - "healthchecks.io"
            scrape_interval: 1m
          - job_name: "homeassistant"
            metrics_path: "/api/prometheus"
            scheme: "https"
            authorization:
              credentials: "${HOMEASSISTANT_TOKEN}"
            static_configs:
              - targets:
                  - "homeassistant.${HOMELAB_DOMAIN}"
      ingress:
        enabled: true
        annotations:
          external-dns.alpha.kubernetes.io/hostname: "prometheus.${HOMELAB_DOMAIN}"
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: "Prometheus"
          gethomepage.dev/group: "Monitoring"
          gethomepage.dev/icon: "prometheus"
          gethomepage.dev/pod-selector: >-
            app.kubernetes.io/name=prometheus
          gethomepage.dev/widget.type: "prometheus"
          gethomepage.dev/widget.url: "https://prometheus.${HOMELAB_DOMAIN}"
        hosts:
          - "prometheus.${HOMELAB_DOMAIN}"
        paths:
          - /
    kubeetcd:
      enabled: false
